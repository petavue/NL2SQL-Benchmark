{'geo': [{'question': 'what major cities are located in kansas', 'sql_query': 'SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  "kansas";', 'db_id': 'geo', 'hardness': 'medium'}], 'cre_Doc_Control_Systems': [{'question': 'What is the document status description of the document with id 1?', 'sql_query': 'SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;', 'db_id': 'cre_Doc_Control_Systems', 'hardness': 'medium'}], 'student_transcripts_tracking': [{'question': 'What is the department description for the one whose name has the word computer?', 'sql_query': "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", 'db_id': 'student_transcripts_tracking', 'hardness': 'medium'}], 'product_catalog': [{'question': 'Find the name of the product that has the smallest capacity.', 'sql_query': 'SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1', 'db_id': 'product_catalog', 'hardness': 'medium'}], 'wta_1': [{'question': 'What are the names of the winner and loser who played in the longest match?', 'sql_query': 'SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1', 'db_id': 'wta_1', 'hardness': 'medium'}], 'insurance_and_eClaims': [{'question': 'Find the number of records of each policy type and its type code.', 'sql_query': 'SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code', 'db_id': 'insurance_and_eClaims', 'hardness': 'medium'}], 'document_management': [{'question': 'List all the image name and URLs in the order of their names.', 'sql_query': 'SELECT image_name ,  image_url FROM images ORDER BY image_name', 'db_id': 'document_management', 'hardness': 'medium'}], 'club_1': [{'question': 'Count the number of different positions in the club "Bootup Baltimore".', 'sql_query': 'SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  "Bootup Baltimore"', 'db_id': 'club_1', 'hardness': 'medium'}], 'phone_1': [{'question': 'What is the average ROM size of phones produced by the company named "Nokia Corporation"?', 'sql_query': 'SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = "Nokia Corporation";', 'db_id': 'phone_1', 'hardness': 'medium'}], 'soccer_2': [{'question': 'Find the name of all students who were in the tryout sorted in alphabetic order.', 'sql_query': 'SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName', 'db_id': 'soccer_2', 'hardness': 'medium'}], 'wrestler': [{'question': 'What are the names of wrestlers and their teams in elimination, ordered descending by days held?', 'sql_query': 'SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC', 'db_id': 'wrestler', 'hardness': 'medium'}], 'race_track': [{'question': 'Show the race class and number of races in each class.', 'sql_query': 'SELECT CLASS ,  count(*) FROM race GROUP BY CLASS', 'db_id': 'race_track', 'hardness': 'medium'}], 'match_season': [{'question': 'What are the official native languages that contain the string "English".', 'sql_query': 'SELECT Official_native_language FROM country WHERE Official_native_language LIKE "%English%"', 'db_id': 'match_season', 'hardness': 'medium'}], 'dorm_1': [{'question': 'How many different majors are there and how many different city codes are there for each student?', 'sql_query': 'SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student', 'db_id': 'dorm_1', 'hardness': 'medium'}], 'department_management': [{'question': 'List the creation year, name and budget of each department.', 'sql_query': 'SELECT creation ,  name ,  budget_in_billions FROM department', 'db_id': 'department_management', 'hardness': 'medium'}], 'cre_Doc_Tracking_DB': [{'question': 'Show all calendar dates and day Numbers.', 'sql_query': 'SELECT calendar_date ,  day_Number FROM Ref_calendar', 'db_id': 'cre_Doc_Tracking_DB', 'hardness': 'medium'}], 'inn_1': [{'question': 'What are the names of modern rooms that have a base price lower than $160 and two beds.', 'sql_query': "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';", 'db_id': 'inn_1', 'hardness': 'medium'}], 'customers_and_addresses': [{'question': 'Find the name of all customers whose name contains "Alex".', 'sql_query': 'SELECT customer_name FROM customers WHERE customer_name LIKE "%Alex%"', 'db_id': 'customers_and_addresses', 'hardness': 'medium'}], 'customers_card_transactions': [{'question': 'What is the first name, last name, and phone of the customer with card 4560596484842.', 'sql_query': 'SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  "4560596484842"', 'db_id': 'customers_card_transactions', 'hardness': 'medium'}], 'cre_Drama_Workshop_Groups': [{'question': 'Return the name of the marketing region the store Rob Dinning is located in.', 'sql_query': 'SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  "Rob Dinning"', 'db_id': 'cre_Drama_Workshop_Groups', 'hardness': 'medium'}], 'baseball_1': [{'question': 'How many games were played in city Atlanta in 2000?', 'sql_query': "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';", 'db_id': 'baseball_1', 'hardness': 'medium'}], 'cre_Theme_park': [{'question': 'Tell me the name of the staff in charge of the attraction called "US museum".', 'sql_query': 'SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  "US museum"', 'db_id': 'cre_Theme_park', 'hardness': 'medium'}], 'cinema': [{'question': 'Give me the title and highest price for each film.', 'sql_query': 'SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id', 'db_id': 'cinema', 'hardness': 'medium'}], 'apartment_rentals': [{'question': 'What are the start date and end date of each apartment booking?', 'sql_query': 'SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings', 'db_id': 'apartment_rentals', 'hardness': 'medium'}], 'station_weather': [{'question': 'list the local authorities and services provided by all stations.', 'sql_query': 'SELECT local_authority ,  services FROM station', 'db_id': 'station_weather', 'hardness': 'medium'}], 'local_govt_in_alabama': [{'question': 'List the service id and details for the events.', 'sql_query': 'SELECT service_id ,  event_details FROM EVENTS', 'db_id': 'local_govt_in_alabama', 'hardness': 'medium'}], 'game_1': [{'question': 'What are the names of all the games that have been played for at least 1000 hours?', 'sql_query': 'SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000', 'db_id': 'game_1', 'hardness': 'medium'}], 'employee_hire_evaluation': [{'question': 'Count the number of employees for each city.', 'sql_query': 'SELECT count(*) ,  city FROM employee GROUP BY city', 'db_id': 'employee_hire_evaluation', 'hardness': 'medium'}], 'train_station': [{'question': 'Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.', 'sql_query': 'SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25', 'db_id': 'train_station', 'hardness': 'medium'}], 'musical': [{'question': 'What are the names of actors and the musicals that they are in?', 'sql_query': 'SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID', 'db_id': 'musical', 'hardness': 'medium'}], 'flight_2': [{'question': "How many 'United Airlines' flights go to Airport 'ASY'?", 'sql_query': 'SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"', 'db_id': 'flight_2', 'hardness': 'medium'}], 'e_learning': [{'question': 'List the personal names and family names of all the students in alphabetical order of family name.', 'sql_query': 'SELECT personal_name ,  family_name FROM Students ORDER BY family_name', 'db_id': 'e_learning', 'hardness': 'medium'}], 'behavior_monitoring': [{'question': 'Find the start and end dates of behavior incidents of students with last name "Fahey".', 'sql_query': 'SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  "Fahey"', 'db_id': 'behavior_monitoring', 'hardness': 'medium'}], 'flight_1': [{'question': 'What is the name and distance for the aircraft that has an id of 12?', 'sql_query': 'SELECT name ,  distance FROM Aircraft WHERE aid  =  12', 'db_id': 'flight_1', 'hardness': 'medium'}], 'orchestra': [{'question': 'List the name of the conductor with the most years of work.', 'sql_query': 'SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1', 'db_id': 'orchestra', 'hardness': 'medium'}], 'hospital_1': [{'question': 'Return the name of each physician and the number of patients he or she treats.', 'sql_query': 'SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid', 'db_id': 'hospital_1', 'hardness': 'medium'}], 'gas_company': [{'question': 'List the company name and rank for all companies in the decreasing order of their sales.', 'sql_query': 'SELECT company ,  rank FROM company ORDER BY Sales_billion DESC', 'db_id': 'gas_company', 'hardness': 'medium'}], 'game_injury': [{'question': 'How many games has each stadium held?', 'sql_query': 'SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id', 'db_id': 'game_injury', 'hardness': 'medium'}], 'hr_1': [{'question': 'display the department id and the total salary for those departments which contains at least two employees.', 'sql_query': 'SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2', 'db_id': 'hr_1', 'hardness': 'medium'}], 'performance_attendance': [{'question': 'What are the dates and locations of performances?', 'sql_query': 'SELECT Date ,  LOCATION FROM performance', 'db_id': 'performance_attendance', 'hardness': 'medium'}], 'body_builder': [{'question': 'List each birth place along with the number of people from there.', 'sql_query': 'SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place', 'db_id': 'body_builder', 'hardness': 'medium'}], 'student_assessment': [{'question': 'How many students attend course English?', 'sql_query': 'SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "English"', 'db_id': 'student_assessment', 'hardness': 'medium'}], 'company_office': [{'question': 'Find the names of the buildings in "on-hold" status, and sort them in ascending order of building stories.', 'sql_query': 'SELECT name FROM buildings WHERE Status  =  "on-hold" ORDER BY Stories ASC', 'db_id': 'company_office', 'hardness': 'medium'}], 'network_2': [{'question': 'list the name, job title of all people ordered by their names.', 'sql_query': 'SELECT name ,  job FROM Person ORDER BY name', 'db_id': 'network_2', 'hardness': 'medium'}], 'ship_mission': [{'question': 'What are the mission codes, fates, and names of the ships involved?', 'sql_query': 'SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID', 'db_id': 'ship_mission', 'hardness': 'medium'}], 'allergy_1': [{'question': 'Show all allergy types and the number of allergies in each type.', 'sql_query': 'SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype', 'db_id': 'allergy_1', 'hardness': 'medium'}], 'party_people': [{'question': 'Show all ministers and parties they belong to in descending order of the time they took office.', 'sql_query': 'SELECT minister ,  party_name FROM party ORDER BY took_office DESC', 'db_id': 'party_people', 'hardness': 'medium'}], 'csu_1': [{'question': 'Which campus was opened between 1935 and 1939?', 'sql_query': 'SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939', 'db_id': 'csu_1', 'hardness': 'medium'}], 'school_bus': [{'question': 'Show the school name and driver name for all school buses.', 'sql_query': 'SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id', 'db_id': 'school_bus', 'hardness': 'medium'}], 'insurance_fnol': [{'question': 'How many policies are listed for the customer named "Dayana Robel"?', 'sql_query': 'SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  "Dayana Robel"', 'db_id': 'insurance_fnol', 'hardness': 'medium'}], 'imdb': [{'question': 'Find all actors from Austin born after 1980', 'sql_query': 'SELECT name FROM actor WHERE birth_city  =  "Austin" AND birth_year  >  1980;', 'db_id': 'imdb', 'hardness': 'medium'}], 'customers_and_invoices': [{'question': 'How many invoices correspond to each order id?', 'sql_query': 'SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id', 'db_id': 'customers_and_invoices', 'hardness': 'medium'}], 'voter_2': [{'question': 'For each election cycle, report the number of voting records.', 'sql_query': 'SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle', 'db_id': 'voter_2', 'hardness': 'medium'}], 'school_finance': [{'question': 'How many budgets are above 3000 in year 2001 or before?', 'sql_query': 'SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001', 'db_id': 'school_finance', 'hardness': 'medium'}], 'activity_1': [{'question': 'What are the faculty id and the number of students each faculty has?', 'sql_query': 'SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID', 'db_id': 'activity_1', 'hardness': 'medium'}], 'sakila_1': [{'question': 'Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.', 'sql_query': 'SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30', 'db_id': 'sakila_1', 'hardness': 'medium'}], 'student_1': [{'question': 'How many students are taught by teacher TARRING LEIA?', 'sql_query': 'SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  "TARRING" AND T2.lastname  =  "LEIA"', 'db_id': 'student_1', 'hardness': 'medium'}], 'college_3': [{'question': 'Give the names of the courses with at least five enrollments.', 'sql_query': 'SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5', 'db_id': 'college_3', 'hardness': 'medium'}], 'manufacturer': [{'question': 'Find the number of funiture types produced by each manufacturer as well as the company names.', 'sql_query': 'SELECT count(*) ,  t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id GROUP BY t1.manufacturer_id', 'db_id': 'manufacturer', 'hardness': 'medium'}], 'driving_school': [{'question': 'List the first name and last name of all customers.', 'sql_query': 'SELECT first_name ,  last_name FROM Customers;', 'db_id': 'driving_school', 'hardness': 'medium'}], 'scientist_1': [{'question': 'Find the number of scientists involved for each project name.', 'sql_query': 'SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name', 'db_id': 'scientist_1', 'hardness': 'medium'}], 'entertainment_awards': [{'question': 'Please show different types of artworks with the corresponding number of artworks of each type.', 'sql_query': 'SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE', 'db_id': 'entertainment_awards', 'hardness': 'medium'}], 'county_public_safety': [{'question': 'Show names of cities and names of counties they are in.', 'sql_query': 'SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID', 'db_id': 'county_public_safety', 'hardness': 'medium'}], 'election_representative': [{'question': 'What are the names and parties of representatives?', 'sql_query': 'SELECT Name ,  Party FROM representative', 'db_id': 'election_representative', 'hardness': 'medium'}], 'riding_club': [{'question': 'Show the names of players and names of their coaches.', 'sql_query': 'SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID', 'db_id': 'riding_club', 'hardness': 'medium'}], 'manufactory_1': [{'question': 'Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order).', 'sql_query': 'SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC', 'db_id': 'manufactory_1', 'hardness': 'medium'}], 'ship_1': [{'question': 'Return the name of the youngest captain.', 'sql_query': 'SELECT name FROM captain ORDER BY age LIMIT 1', 'db_id': 'ship_1', 'hardness': 'medium'}], 'solvency_ii': [{'question': 'Show the names of products that are in at least two events.', 'sql_query': 'SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2', 'db_id': 'solvency_ii', 'hardness': 'medium'}], 'department_store': [{'question': 'For each payment method, return how many customers use it.', 'sql_query': 'SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code', 'db_id': 'department_store', 'hardness': 'medium'}], 'scholar': [{'question': 'how many papers does Christopher D. Manning have ?', 'sql_query': 'SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning";', 'db_id': 'scholar', 'hardness': 'medium'}], 'insurance_policies': [{'question': 'Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.', 'sql_query': 'SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1', 'db_id': 'insurance_policies', 'hardness': 'medium'}], 'assets_maintenance': [{'question': "List all every engineer's first name, last name, details and coresponding skill description.", 'sql_query': 'SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id', 'db_id': 'assets_maintenance', 'hardness': 'medium'}], 'tracking_software_problems': [{'question': 'What is the id of the problem log that is created most recently?', 'sql_query': 'SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1', 'db_id': 'tracking_software_problems', 'hardness': 'medium'}], 'movie_1': [{'question': 'What is the average number of stars that each reviewer awards for a movie?', 'sql_query': 'SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name', 'db_id': 'movie_1', 'hardness': 'medium'}], 'products_gen_characteristics': [{'question': 'Return the names and typical buying prices for all products.', 'sql_query': 'SELECT product_name ,  typical_buying_price FROM products', 'db_id': 'products_gen_characteristics', 'hardness': 'medium'}], 'loan_1': [{'question': 'Find the total amount of loans offered by each bank branch.', 'sql_query': 'SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname', 'db_id': 'loan_1', 'hardness': 'medium'}], 'dog_kennels': [{'question': 'What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.', 'sql_query': 'SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1', 'db_id': 'dog_kennels', 'hardness': 'medium'}], 'e_government': [{'question': "List every individual's first name, middle name and last name in alphabetical order by last name.", 'sql_query': 'SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name', 'db_id': 'e_government', 'hardness': 'medium'}], 'tracking_grants_for_research': [{'question': "How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?", 'sql_query': "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'", 'db_id': 'tracking_grants_for_research', 'hardness': 'medium'}], 'film_rank': [{'question': 'How films are produced by each studio?', 'sql_query': 'SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio', 'db_id': 'film_rank', 'hardness': 'medium'}], 'academic': [{'question': 'return me the total citations of all the papers in PVLDB .', 'sql_query': 'SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB";', 'db_id': 'academic', 'hardness': 'medium'}], 'customer_complaints': [{'question': 'Return the average price of products that have each category code.', 'sql_query': 'SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code', 'db_id': 'customer_complaints', 'hardness': 'medium'}], 'program_share': [{'question': 'What is the owner of the channel that has the highest rating ratio?', 'sql_query': 'SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1', 'db_id': 'program_share', 'hardness': 'medium'}], 'medicine_enzyme_interaction': [{'question': "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?", 'sql_query': "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'", 'db_id': 'medicine_enzyme_interaction', 'hardness': 'medium'}], 'local_govt_and_lot': [{'question': 'How many residents does each property have? List property id and resident count.', 'sql_query': 'SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id', 'db_id': 'local_govt_and_lot', 'hardness': 'medium'}], 'battle_death': [{'question': "What are the name and results of the battles when the bulgarian commander is not 'Boril'", 'sql_query': "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'", 'db_id': 'battle_death', 'hardness': 'medium'}], 'store_product': [{'question': 'Find all types of store and number of them.', 'sql_query': 'SELECT TYPE ,  count(*) FROM store GROUP BY TYPE', 'db_id': 'store_product', 'hardness': 'medium'}], 'music_1': [{'question': 'List the name and country of origin for all singers who have produced songs with rating above 9.', 'sql_query': 'SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9', 'db_id': 'music_1', 'hardness': 'medium'}], 'tracking_orders': [{'question': 'Find the order id and customer id associated with the oldest order.', 'sql_query': 'SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1', 'db_id': 'tracking_orders', 'hardness': 'medium'}], 'election': [{'question': 'Find the parties associated with the delegates from district 1. Who served as governors of the parties?', 'sql_query': 'SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1', 'db_id': 'election', 'hardness': 'medium'}], 'music_2': [{'question': 'How many different songs have shared vocals?', 'sql_query': 'SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  "shared"', 'db_id': 'music_2', 'hardness': 'medium'}], 'wine_1': [{'question': 'Give the name of the wine with the highest score.', 'sql_query': 'SELECT Name FROM WINE ORDER BY Score LIMIT 1', 'db_id': 'wine_1', 'hardness': 'medium'}], 'formula_1': [{'question': 'What are the names of the races held after 2017 in Spain?', 'sql_query': 'SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = "Spain" AND T1.year > 2017', 'db_id': 'formula_1', 'hardness': 'medium'}], 'sports_competition': [{'question': 'List the position of players and the average number of points of players of each position.', 'sql_query': 'SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION', 'db_id': 'sports_competition', 'hardness': 'medium'}], 'storm_record': [{'question': 'What are the codes and names for all regions, sorted by codes?', 'sql_query': 'SELECT region_code ,  region_name FROM region ORDER BY region_code', 'db_id': 'storm_record', 'hardness': 'medium'}], 'tvshow': [{'question': 'What is the pixel aspect ratio and country of origin for all TV channels that do not use English?', 'sql_query': "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", 'db_id': 'tvshow', 'hardness': 'medium'}], 'device': [{'question': 'What are the open dates and years for the shop named Apple?', 'sql_query': 'SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  "Apple"', 'db_id': 'device', 'hardness': 'medium'}], 'university_basketball': [{'question': 'What is the total and minimum enrollment of all schools?', 'sql_query': 'SELECT sum(enrollment) ,  min(enrollment) FROM university', 'db_id': 'university_basketball', 'hardness': 'medium'}], 'bike_1': [{'question': 'What are the ids and names of all start stations that were the beginning of at least 200 trips?', 'sql_query': 'SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200', 'db_id': 'bike_1', 'hardness': 'medium'}], 'shop_membership': [{'question': 'What are the total purchases for members rated at level 6?', 'sql_query': 'SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6', 'db_id': 'shop_membership', 'hardness': 'medium'}], 'workshop_paper': [{'question': 'Show different colleges along with the number of authors of submission from each college.', 'sql_query': 'SELECT College ,  COUNT(*) FROM submission GROUP BY College', 'db_id': 'workshop_paper', 'hardness': 'medium'}], 'poker_player': [{'question': 'What are the names of poker players whose earnings is higher than 300000?', 'sql_query': 'SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000', 'db_id': 'poker_player', 'hardness': 'medium'}], 'aircraft': [{'question': 'What are the total number of domestic passengers at all London airports?', 'sql_query': 'SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE "%London%"', 'db_id': 'aircraft', 'hardness': 'medium'}], 'railway': [{'question': 'Show different builders of railways, along with the corresponding number of railways using each builder.', 'sql_query': 'SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder', 'db_id': 'railway', 'hardness': 'medium'}], 'concert_singer': [{'question': 'Show the name and theme for all concerts and the number of singers in each concert.', 'sql_query': 'SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id', 'db_id': 'concert_singer', 'hardness': 'medium'}], 'decoration_competition': [{'question': 'What are the names and countries of members?', 'sql_query': 'SELECT Name ,  Country FROM member', 'db_id': 'decoration_competition', 'hardness': 'medium'}], 'book_2': [{'question': 'List the publisher of the publication with the highest price.', 'sql_query': 'SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1', 'db_id': 'book_2', 'hardness': 'medium'}], 'flight_company': [{'question': 'List the vehicle flight number, date and pilot of all the flights, ordered by altitude.', 'sql_query': 'SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC', 'db_id': 'flight_company', 'hardness': 'medium'}], 'party_host': [{'question': 'What are the name and the nationality of the host of the highest age?', 'sql_query': 'SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1', 'db_id': 'party_host', 'hardness': 'medium'}], 'cre_Docs_and_Epenses': [{'question': 'Return the budget type codes, budget type descriptions and document ids for documents with expenses.', 'sql_query': 'SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code', 'db_id': 'cre_Docs_and_Epenses', 'hardness': 'medium'}], 'restaurants': [{'question': 'how many jamerican cuisine are there in santa cruz county ?', 'sql_query': 'SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  "santa cruz county" AND t1.name  =  "jamerican cuisine";', 'db_id': 'restaurants', 'hardness': 'medium'}], 'climbing': [{'question': 'What are the names of climbers and the corresponding names of mountains that they climb?', 'sql_query': 'SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID', 'db_id': 'climbing', 'hardness': 'medium'}], 'pets_1': [{'question': 'Find the type and weight of the youngest pet.', 'sql_query': 'SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1', 'db_id': 'pets_1', 'hardness': 'medium'}], 'customers_and_products_contacts': [{'question': 'Show the minimum, maximum, average price for all products.', 'sql_query': 'SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products', 'db_id': 'customers_and_products_contacts', 'hardness': 'medium'}], 'entrepreneur': [{'question': 'List the names of entrepreneurs and their companies in descending order of money requested?', 'sql_query': 'SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested', 'db_id': 'entrepreneur', 'hardness': 'medium'}], 'mountain_photos': [{'question': 'What are the id and name of the mountains that have at least 2 photos?', 'sql_query': 'SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2', 'db_id': 'mountain_photos', 'hardness': 'medium'}], 'products_for_hire': [{'question': "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check'", 'sql_query': "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'", 'db_id': 'products_for_hire', 'hardness': 'medium'}], 'journal_committee': [{'question': 'Show the names of editors that are on at least two journal committees.', 'sql_query': 'SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2', 'db_id': 'journal_committee', 'hardness': 'medium'}], 'course_teach': [{'question': 'For each hometown, how many teachers are there?', 'sql_query': 'SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown', 'db_id': 'course_teach', 'hardness': 'medium'}], 'theme_gallery': [{'question': 'What are the names and year of joining for artists that do not have the country "United States"?', 'sql_query': "SELECT name ,  year_join FROM artist WHERE country != 'United States'", 'db_id': 'theme_gallery', 'hardness': 'medium'}], 'news_report': [{'question': 'What is the nationality of the journalist with the largest number of years working?', 'sql_query': 'SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1', 'db_id': 'news_report', 'hardness': 'medium'}]}